#include "mt_xgpio.h"

MtXGpio::MtXGpio(u16 deviceID) {
	XGpio_Initialize(&myXGpio_, deviceID);
}

void MtXGpio::setDirection(u32 directionMask, unsigned int channel){
	XGpio_SetDataDirection(&myXGpio_, channel, directionMask);
}

void MtXGpio::setValue(u32 value, unsigned int channel) {
	XGpio_DiscreteWrite(&myXGpio_, channel, value);
	oValue_ = value;
}

u32 MtXGpio::getValue(unsigned int channel) {
	return XGpio_DiscreteRead(&myXGpio_, channel);
}

void MtXGpio::setBit(unsigned int bitIndex, bool bitValue, unsigned int channel) {
	u32 mask = (0x1 << bitIndex);
	if (bitValue) {
		oValue_ |= mask;
	} else {
		oValue_ &= ~mask;
	}
	XGpio_DiscreteWrite(&myXGpio_, channel, oValue_);
}

bool MtXGpio::getBit(unsigned int bitIndex, unsigned int channel) {
	u32 mask = (0x1 << bitIndex);
	u32 val = XGpio_DiscreteRead(&myXGpio_, channel);
	return ((val & mask) != 0x0);
}
