#ifndef HW_H
#define HW_H

#include "xgpio.h"
#include "xparameters.h"
#include <string>

using namespace std;

XGpio leds, ctrl, poly, res;

void delayMs(int ms) {
	int dv = ms * 100000;
	for (int i = 0; i < dv; ++i);
}
void delayUs(int us) {
	int dv = us * 100000000;
	for (int i = 0; i < dv; ++i);
}

void platformInit() {
	XGpio_Initialize(&leds, XPAR_AXI_GPIO_LEDS_DEVICE_ID);
	XGpio_SetDataDirection(&leds, 1, ~0x0F);
	XGpio_SetDataDirection(&leds, 2, ~0x3F);
	XGpio_Initialize(&poly, XPAR_AXI_GPIO_POLYNOMIAL_DEVICE_ID);
	XGpio_Initialize(&ctrl, XPAR_AXI_GPIO_CONTROL_DEVICE_ID);
	XGpio_Initialize(&res, XPAR_AXI_GPIO_RESULT_DEVICE_ID);

}

void setLed(int value) {
	XGpio_DiscreteWrite(&leds, 1, value);
}

void setControl(int value) {
	XGpio_DiscreteWrite(&ctrl, 1, value);
}

void setCounterMax(int value) {
	XGpio_DiscreteWrite(&ctrl, 2, value);
}

bool isready() {
	int aux = XGpio_DiscreteRead(&ctrl, 1);
	return ((aux & 0x1) == 0x1);
}

void startTRNG() {
	XGpio_DiscreteWrite(&ctrl, 1, 0x00);
	delayUs(1);
	XGpio_DiscreteWrite(&ctrl, 1, 0x02);
	delayUs(1);
	XGpio_DiscreteWrite(&ctrl, 1, 0x00);
	delayUs(1);
	XGpio_DiscreteWrite(&ctrl, 1, 0x01);
}

string getResult() {
	string result = "";
	for (int i = 7; i >= 0; --i) {
		XGpio_DiscreteWrite(&res, 2, i);
		int r = XGpio_DiscreteRead(&res, 1);
		for (int p = 0; p < 32; ++p) {
			if ((0x80000000 & r) == 0) {
				result += "0";
			} else {
				result += "1";
			}
			r <<= 1;
		}
	}
	return result;
}

#endif
