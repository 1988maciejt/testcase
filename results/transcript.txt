//: running script driver...
//: reading /mnt/d/aio/templates/arduino/functions/int2string...
//: Added Arduino function: String int2string (int x, int positions, bool leading_zeros = false);
//: Added Arduino global declaration: int ss = 0;
//: Added Arduino function: void timer_1000ms_handler0 ();
//: Added Arduino header: SimpleTimer.h
//: Added Arduino global declaration: SimpleTimer main_timer;
//: Added Arduino global declaration: int int_timer_1000ms_handler0_1000 = -1;
//: Added Arduino header: LiquidCrystal_I2C.h
//: Added Arduino global declaration: LiquidCrystal_I2C lcd (0x27, 16, 2);
//: Added Arduino function: void timer_250ms_handler1 ();
//: Added Arduino global declaration: int int_timer_250ms_handler1_250 = -1;
//: Added Arduino definition: LED = 13
//: Added Arduino function: void timer_500ms_handler2 ();
//: Added Arduino global declaration: int int_timer_500ms_handler2_500 = -1;
//: Added Arduino global declaration: String serial_buffer = "";
//: Added Arduino function: void serialParserCallback (LinkedList<String> &argc);
//: reading /mnt/d/aio/templates/arduino/functions/serialHandler...
//: Added Arduino function: void serialHandler ();
//: Processing 'serialHandler' dependency: 'serialParser'
//: reading /mnt/d/aio/templates/arduino/functions/serialParser...
//: Added Arduino function: void serialParser ();
//: Processing 'serialParser' dependency: 'splitString'
//: reading /mnt/d/aio/templates/arduino/functions/splitString...
//: Added Arduino function: LinkedList<String> splitString (String text, char separator = ' ');
//: Processing 'splitString' dependency: 'getValue'
//: reading /mnt/d/aio/templates/arduino/functions/getValue...
//: Added Arduino function: String getValue (String data, char separator, int index);
//: Processing 'splitString' need: 'LinkedList.h'
//: Added Arduino header: LinkedList.h
//: Processing 'serialParser' need: 'LinkedList.h'
//: Added Arduino header: LinkedList.h
//: reading /mnt/d/aio/templates/arduino/functions/analogReadLinScale...
//: Added Arduino function: double analogReadLinScale (uint8_t analog_input, double a, double b);
//: Added Arduino definition: MYVOLTAGE_COEFF_A = 0.015329245534524128
//: Added Arduino definition: MYVOLTAGE_COEFF_B = 0.0
//: Added Arduino function: double myVoltage ();
ELECTRICAL_INFO: --- INFORMATION RELATED TO myVoltage () -------------------------
ELECTRICAL_INFO: Connect SIGNAL to A0 through 47.00 kOhm resistor.
ELECTRICAL_INFO: Connect A0 to GND through 22.00 kOhm resistor.
ELECTRICAL_INFO: The maximum Voltage you can measure by myVoltage is 15.68 V.
ELECTRICAL_INFO: The Voltage resolution is 15.33 mV.
//: reading /mnt/d/aio/templates/arduino/classes/fifo...
//: Added Arduino class: template <class t> class fifo;
//: Processing 'fifo' dependency: 'fifo_item'
//: reading /mnt/d/aio/templates/arduino/classes/fifo_item...
//: Added Arduino class: template <class t> class fifo_item;
//: Processing 'fifo_item' dependency: 'fifo'
//: writting results/my_sketch/my_sketch.ino...
//: Compiling Arduino sketch...
//: Build options changed, rebuilding all
Alternatives for LinkedList.h: [LinkedList@1.3.2]
ResolveLibrary(LinkedList.h)
  -> candidates: [LinkedList@1.3.2]
Alternatives for LiquidCrystal_I2C.h: [Newliquidcrystal_1.3.5 LiquidCrystal_I2C@1.1.2]
ResolveLibrary(LiquidCrystal_I2C.h)
  -> candidates: [Newliquidcrystal_1.3.5 LiquidCrystal_I2C@1.1.2]
Alternatives for Wire.h: [Wire@1.0]
ResolveLibrary(Wire.h)
  -> candidates: [Wire@1.0]
Alternatives for SimpleTimer.h: [SimpleTimer]
ResolveLibrary(SimpleTimer.h)
  -> candidates: [SimpleTimer]
Sketch uses 11696 bytes (38%) of program storage space. Maximum is 30720 bytes.
Global variables use 712 bytes (34%) of dynamic memory, leaving 1336 bytes for local variables. Maximum is 2048 bytes.
DIFF: results/my_sketch/my_sketch.ino 	 OK
//: No serial device found.
//: === SCRIPT FINISHED ===

